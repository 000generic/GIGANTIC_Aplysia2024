#! python

# Protein_ID,Localizations,Signals,Cytoplasm,Nucleus,Extracellular,Cell membrane,Mitochondrion,Plastid,Endoplasmic reticulum,Lysosome/Vacuole,Golgi apparatus,Peroxisome
# Metazoa-Annelida-Polychaeta-Order_unclassified-Capitellidae-Capitella-teleta-gigantic_run20220314123552_seq0000244112aa,Extracellular,Signal peptide,0.2264000028371811,0.3100000023841858,0.9017000198364258,0.2320999950170517,0.18219999969005585,0.009600000455975533,0.09459999948740005,0.08820000290870667,0.0957999974489212,0.011599999852478504

input_annotations = open( 'output/10-list-deeploc2-annotations', 'r' )
input_fastas = open( 'output/11-list-fastas', 'r' )

seqid_annotation = {}
for next_annotation in input_annotations:

    input_annotation = open( next_annotation[ :-1 ], 'r' )
    first_line = False
    for next_line in input_annotation:
        if first_line == False:
            first_line = True
        else:
            info = next_line.split( ',' )
            seqid = info[ 0 ]
            localizations = info[ 1 ]
            localizations = ''.join( localizations.split( ' ' ) )
            if len( localizations ) == 0:
                localizations = 'None'
            signals = info[ 2 ]
            signals = ''.join( signals.split( ' ' ) )
            if len( signals ) == 0:
                signals = 'None'
            annotation_summary = 'DeepLoc2_LOCAL:' + localizations + '_SIGNAL:' + signals

            # process DeepLoc2 for inferred evidence of signaling molecules SM - extracellular localization and sigal peptide would seem to indicate a signaling molecule
            # DeepLoc2_LOCAL:Extracellular_SIGNAL:Signalpeptide
            if len( annotation_summary.split( 'Signalpeptide' ) ) > 1:
                if len( annotation_summary.split( 'Extracellular' ) ) > 1:
                    sm_deeploc = 'DeepLoc2_SM:Extracellular_Signalpeptide'
                else:
                    sm_deeploc = 'None'
            else:
                sm_deeploc = 'None'

            # process DeepLoc2 for signal peptide SP annotations - "Signalpeptide"
            if len( annotation_summary.split( 'Signalpeptide' ) ) > 1:
                sp_deeploc = annotation_summary
            else:
                sp_deeploc = 'None'

            # process DeepLoc2 for transmembrane domain TM annotations - "Transmembranedomain"
            if len( annotation_summary.split( 'Transmembranedomain' ) ) > 1:
                tm_deeploc = annotation_summary
            else:
                tm_deeploc = 'None'

            annotation = sm_deeploc + '\t' + sp_deeploc + '\t' + tm_deeploc
            seqid_annotation[ seqid ] = annotation

    input_annotation.close()

for next_fasta in input_fastas:
    input_fasta = open( next_fasta[ :-1 ], 'r' )
    file_name = next_fasta[ :-1 ].split( '/' )[ -1 ]
    core_name = '-'.join( file_name.split( '-' )[ :7 ] )
    new_file = 'output/12-deeploc2-annotations-' + core_name
    output_annotation = open( new_file, 'w' )
    output = '[ Seqid ]' + '\t' + '[ Signaling Molecule Inference ]' + '\t' + '[ Signal Peptide Annotation ]' + '\t' + '[ Transmembrane Domain Annotation ]' + '\n'
    output_annotation.write( output )
    
    for next_line in input_fasta:

        if next_line[ 0 ] == '>':
            seqid = next_line[ 1:-1 ]
            if seqid in seqid_annotation.keys():
                annotation = seqid_annotation[ seqid ]
                output = seqid + '\t' + annotation + '\n'
            else:
                output = seqid + '\t' + 'None' + '\n'
            output_annotation.write( output )

        else:
            pass

    input_fasta.close()
    output_annotation.close()
input_annotations.close()
input_fastas.close()
