#! python

input_annotation = open( 'output/21-map-aplysia-sequences-annotations-names-SHORT', 'r' )
input_CGL_OTO = open( 'output/22-aplysia-species19-orthogroups_X_evolution', 'r' )
output_combo = open( 'output/25-aplysia-genome-core-annotations-secretome-orthofinder', 'w' )

# Locid   Gene Symbol     Gene Name       Leonid Name     Secretome Conservative  Secretome Liberal       Secretome Leonid        Orthogroup HOG  Orthogroup OG   Pfam    Pfam Symbol     Pfam Description        GO      GO Namespace    GO Name GO Description     DeepLoc SP      DeepTNHMM SP    SignalP SP      DeepLoc TM      DeepTMHMM TM    Mobidblite DO   MetaPredict DO  AA Sequence

locid_anno = {}
for next_line in input_annotation:
    info = next_line[ :-1 ].split( '\t' )
    locid = info[ 0 ]
    locid_anno[ locid ] = next_line[ :-1 ]
print( info )
# Locid   Gene Symbol     Gene Name       Orthogroup OG   OG Origin Clade OG Origin Name  Orthogroup HOG  HOG Origin Name Aplysia Count   Capitella       Count   Class   Aplysia Count   Drosophila      Count   Class   Aplysia Count   Lingula Count      Class   Aplysia Count   Homo    Count   Class   Aplysia Count   Crassostrea     Count   Class   Aplysia Count   Mizuhopecten    Count   Class   Aplysia Count   Cyclina Count   Class   Aplysia Count   Nautilus        Count   Class   Aplysia    Count   Argonauta       Count   Class   Aplysia Count   Octopus Count   Count   Aplysia Count   Achatina        Count   Class   Aplysia Count   Aplysia Count   Class   Aplysia Count   Pomacea Count   Class   Aplysia Count   Lottia  Count      Class   Aplysia Count   Gigantopelta    Count   Class   Aplysia Count   Elysia  Count   Class   Aplysia Count   Acanthopleura   Count   Class   Aplysia Count   Caenorhabditis  Count   Class   Aplysia Count   Phoronis        Count   Class      GIGANTIC ID

output = 'LOCID' + '\t' + 'Gene Symbol' + '\t' + 'Gene Name' + '\t' + 'Leonid Gene Name' + '\t' + 'Orthogroup OG' + '\t' + 'Orthogroup OG Clade' + '\t' + 'Orthogroup OG Name' + '\t' + 'Orthogroup HOG' + '\t' + 'Orthogroup HOG Name' + '\t' + 'Secretome Conservative' + '\t' + 'Secretome Liberal' + '\t' + 'Secretome Leonid' + '\t' + 'Serectome Leonid Gene Name' + '\t' +  'Pfam' + '\t' + 'Pfam Symbol' + '\t' + 'Pfam Description' + '\t' + 'GO' + '\t' + 'GO Namespace' + '\t' + 'GO Name' + '\t' +  'GO Description' + '\t' + 'DeepLoc SP'+ '\t' + 'DeepTNHMM SP'+ '\t' + 'SignalP SP'+ '\t' + 'DeepLoc TM' + '\t' + 'DeepTMHMM TM'+ '\t' +  'Mobidblite DO' + '\t' + 'MetaPredict DO' + '\t' + 'AA Sequence' + '\n'
output_combo.write( output )

first = False
for next_line in input_CGL_OTO:
    if first == False:
        first = True
    else:
        info_cgl = next_line[ :-1 ].split( '\t' )
        locid = info_cgl[ 0 ]
        orthogroup_og = info_cgl[ 3 ]
        orthogroup_og_clade = info_cgl[ 4 ]
        orthogroup_og_name = info_cgl[ 5 ]
        orthogroup_hog = info_cgl[ 6 ]
        orthogroup_hog_name = info_cgl[ 7 ]
    
        info_anno = locid_anno[ locid ].split( '\t' )
        symbol = info_anno[ 1 ]
        name = info_anno[ 2 ]
        leonid = info_anno[ 3 ]
        secretome_conservative = info_anno[ 4 ]
        secretome_liberal = info_anno[ 5 ]
        secretome_leonid = info_anno[ 6 ]
        secretome_name = info_anno[ 7 ]
        annotation = '\t'.join( info_anno[ 10: ] ) 
        
        output = locid + '\t' + symbol + '\t' + name + '\t' + leonid + '\t' + orthogroup_og + '\t' + orthogroup_og_clade + '\t' + orthogroup_og_name + '\t' + orthogroup_hog + '\t' + orthogroup_hog_name + '\t' + secretome_conservative + '\t' + secretome_liberal + '\t' + secretome_leonid + '\t' + secretome_name + '\t' + annotation + '\n'
        output_combo.write( output )

input_annotation.close()
input_CGL_OTO.close()
output_combo.close()
