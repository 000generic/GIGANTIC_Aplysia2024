#! python
# Interproscan script

input_files = open( 'output/10-list-interproscan-tsv-files', 'r' )
input_fastas = open( 'output/11-list-fastas', 'r' )
apps = [ 'Pfam', 'MobiDBLite' ]

# Metazoa-Mollusca-Gastropoda-Aplysiida-Aplysiidae-Aplysia-californica-gigantic20220627164247_seq0006153765aa     fa35527f10ea24ed93348a60b6abd109        530     Pfam    PF12894 Anaphase-promoting complex subunit 4 WD40 domain      257     310     1.4E-7  T       17-07-2022      IPR024977       Anaphase-promoting complex subunit 4, WD40 domain
seq_app_id = {}

# read into dictionary all interproscan species annotations
for next_file in input_files:

    input_file = open( next_file[ :-1 ], 'r' )
    
    for next_line in input_file:
        info = next_line.split( '\t' )
        seqid = info[ 0 ]
        app = info [ 3 ]
        identifier = info[ 4 ]
        start = info[ 6 ]
        stop = info[ 7 ] 
        app_id = app + '_' + identifier + '_' + start + '_' + stop
        if seqid in seq_app_id.keys():
            seq_app_id[ seqid ].append( app_id )
        else:
            seq_app_id[ seqid ] = []
            seq_app_id[ seqid ].append( app_id )

# collect seqids for all species and check for interproscan annotations
for next_fasta in input_fastas:

    # create filehandles for input and output
    input_fasta = open( next_fasta[ :-1 ], 'r' )
    
    file_name = next_fasta.split( '/' )[ -1 ]
    core_name = '-'.join( file_name.split( '-' )[ :7 ] )
    new_file = 'output/12-interproscan5-app-id-annotations-' + core_name
    output_info = open( new_file, 'w' )

    # provide file structure details
    output = '[ Sequence Identifier ]' + '\t'
    for next_app in apps:
        output = output + '[ InterProScan5 ' + next_app + ' ]\t'
    output = output[ :-1 ] + '\n'
    output_info.write( output )

    # process fasta file
    for next_line in input_fasta:
        if next_line[ 0 ] == '>': # check if its a header
            seqid = next_line[ 1:-1 ]
            output = seqid + '\t' # output interproscan annotations for the sequence
            
            if seqid in seq_app_id.keys(): # check if sequence has inteproscan annotation

                for next_app in apps: # go through apps of interest
                    annotations = []
                    for next_annotation in seq_app_id[ seqid ]: # check if app annotated the sequence
                        info_annotation = next_annotation.split( '_' )
                        if info_annotation[ 0 ] == next_app:
                            annotations.append( next_annotation )
                        else:
                            pass
        
                    if len( annotations ) == 0:
                        output = output + 'None' + '\t'
                    else:
                        app_annotations = ''
                        for next_annotation in annotations:
                            app_annotations = app_annotations + next_annotation + ', '
                        app_annotations = app_annotations[ :-2 ]
                        output = output + app_annotations + '\t'
                output = output[ :-1 ] + '\n'
                output_info.write( output )
                
            else:
                for next_app in apps:
                    output = output + 'None' + '\t'
                output = output[ :-1 ] + '\n'
                output_info.write( output )
        else:
            pass
    input_fasta.close()
    output_info.close()
input_files.close()
input_fastas.close()
